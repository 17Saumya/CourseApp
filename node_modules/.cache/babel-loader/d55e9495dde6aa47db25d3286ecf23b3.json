{"ast":null,"code":"var _jsxFileName = \"D:\\\\onlinecourses\\\\React\\\\course-app\\\\src\\\\components\\\\Register.jsx\";\nimport React, { Component } from 'react';\nimport FormValidator from './FormValidator'; //import './App.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.passwordMatch = (confirmation, state) => state.password === confirmation;\n\n    this.handleInputChange = event => {\n      event.preventDefault();\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      const validation = this.validator.validate(this.state);\n      this.setState({\n        validation\n      });\n      this.submitted = true;\n\n      if (validation.isValid) {//reaches here if form validates successfully...\n      }\n    };\n\n    this.validator = new FormValidator([{\n      field: 'full_name',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Enter full name.'\n    }, {\n      field: 'email',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Enter your email address.'\n    }, {\n      field: 'email',\n      method: 'isEmail',\n      validWhen: true,\n      message: 'Enter valid email address.'\n    }, {\n      field: 'phone',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Enter a phone number.'\n    }, {\n      field: 'phone',\n      method: 'matches',\n      args: [/^\\(?\\d\\d\\d\\)? ?\\d\\d\\d-?\\d\\d\\d\\d$/],\n      validWhen: true,\n      message: 'Enter valid phone number.'\n    }, {\n      field: 'password',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Enter password.'\n    }, {\n      field: 'password_confirmation',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Enter Password confirmation.'\n    }, {\n      field: 'password_confirmation',\n      method: this.passwordMatch,\n      // notice that we are passing a custom function here\n      validWhen: true,\n      message: 'Password and password confirmation do not match.'\n    }]);\n    this.state = {\n      full_name: '',\n      email: '',\n      phone: '',\n      password: '',\n      password_confirmation: '',\n      validation: this.validator.valid()\n    };\n    this.submitted = false;\n  }\n\n  render() {\n    let validation = this.submitted ? this.validator.validate(this.state) : this.state.validation;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4 col-md-offset-4\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"registrationForm\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Registration form \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: validation.email.isInvalid && 'has-error',\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"full_name\",\n                children: \"Full Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"string\",\n                className: \"form-control\",\n                name: \"full_name\",\n                placeholder: \"Full Name\",\n                onChange: this.handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 1\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"help-block\",\n                children: validation.full_name.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 125\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: validation.email.isInvalid && 'has-error',\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \"Email address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                className: \"form-control\",\n                name: \"email\",\n                placeholder: \"Email address\",\n                onChange: this.handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 1\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"help-block\",\n                children: validation.email.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 124\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: validation.phone.isInvalid && 'has-error',\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"phone\",\n                children: \"Phone(enter only 10 digit number)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"phone\",\n                className: \"form-control\",\n                name: \"phone\",\n                placeholder: \"Phone Number\",\n                onChange: this.handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 1\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"help-block\",\n                children: validation.phone.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 123\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: validation.password.isInvalid && 'has-error',\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"form-control\",\n                placeholder: \"Password\",\n                name: \"password\",\n                onChange: this.handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 1\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"help-block\",\n                children: validation.password.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 125\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: validation.password_confirmation.isInvalid && 'has-error',\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password_confirmation\",\n                children: \"Confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"form-control\",\n                placeholder: \"Confirm Password\",\n                name: \"password_confirmation\",\n                onChange: this.handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 1\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"help-block\",\n                children: validation.password_confirmation.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 146\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.handleFormSubmit,\n              className: \"btn btn-primary\",\n              children: \" Register \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 1\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 1\n    }, this);\n  }\n\n}\n\nexport default Register;\n{\n  /*import React from 'react';\r\n  import { useState } from 'react';\r\n  \n  function Register() {\r\n  \n  // States for registration\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  \n  // States for checking the errors\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  \n  // Handling the name change\r\n  const handleName = (e) => {\r\n  setName(e.target.value);\r\n  setSubmitted(false);\r\n  };\r\n  \n  // Handling the email change\r\n  const handleEmail = (e) => {\r\n  setEmail(e.target.value);\r\n  setSubmitted(false);\r\n  };\r\n  \n  // Handling the password change\r\n  const handlePassword = (e) => {\r\n  setPassword(e.target.value);\r\n  setSubmitted(false);\r\n  };\r\n  \n  // Handling the form submission\r\n  const handleSubmit = (e) => {\r\n  e.preventDefault();\r\n  if (name === '' || email === '' || password === '') {\r\n  setError(true);\r\n  } else {\r\n  setSubmitted(true);\r\n  setError(false);\r\n  }\r\n  };\r\n  \n  // Showing success message\r\n  const successMessage = () => {\r\n  return (\r\n  <div\r\n  \tclassName=\"success\"\r\n  \tstyle={{\r\n  \tdisplay: submitted ? '' : 'none',\r\n  \t}}>\r\n  \t<h1>User {name} successfully registered!!</h1>\r\n  </div>\r\n  );\r\n  };\r\n  \n  // Showing error message if error is true\r\n  const errorMessage = () => {\r\n  return (\r\n  <div\r\n  \tclassName=\"error\"\r\n  \tstyle={{\r\n  \tdisplay: error ? '' : 'none',\r\n  \t}}>\r\n  \t<h1>Please enter all the fields</h1>\r\n  </div>\r\n  );\r\n  };\r\n  \n  return (\r\n  <div className=\"form\">\r\n  <div>\r\n  \t<h1>User Registration</h1>\r\n  </div>\r\n  \n  {/* Calling to the methods */\n}\n{\n  /*<div className=\"messages\">\r\n  {errorMessage()}\r\n  {successMessage()}\r\n  </div>\r\n  \t<form>\r\n  {/* Labels and inputs for form data */\n}\n{\n  /*<label className=\"label\">Name</label>\r\n  <input onChange={handleName} className=\"input\"\r\n  value={name} type=\"text\" />\r\n  \t<label className=\"label\">Email</label>\r\n  <input onChange={handleEmail} className=\"input\"\r\n  value={email} type=\"email\" />\r\n  \t<label className=\"label\">Password</label>\r\n  <input onChange={handlePassword} className=\"input\"\r\n  value={password} type=\"password\" />\r\n  \t<button onClick={handleSubmit} className=\"btn\" type=\"submit\">\r\n  Submit\r\n  </button>\r\n  </form>\r\n  </div>\r\n  );\r\n  }*/\n}","map":{"version":3,"sources":["D:/onlinecourses/React/course-app/src/components/Register.jsx"],"names":["React","Component","FormValidator","Register","constructor","passwordMatch","confirmation","state","password","handleInputChange","event","preventDefault","setState","target","name","value","handleFormSubmit","validation","validator","validate","submitted","isValid","field","method","validWhen","message","args","full_name","email","phone","password_confirmation","valid","render","isInvalid"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport FormValidator from './FormValidator';\r\n//import './App.css';\r\nclass Register extends Component{\r\nconstructor(){\r\nsuper();\r\nthis.validator = new FormValidator([{\r\nfield: 'full_name',\r\nmethod: 'isEmpty',\r\nvalidWhen: false,\r\nmessage: 'Enter full name.'\r\n}, {\r\nfield: 'email',\r\nmethod: 'isEmpty',\r\nvalidWhen: false,\r\nmessage: 'Enter your email address.'\r\n}, {\r\nfield: 'email',\r\nmethod: 'isEmail',\r\nvalidWhen: true,\r\nmessage: 'Enter valid email address.'\r\n}, {\r\nfield: 'phone',\r\nmethod: 'isEmpty',\r\nvalidWhen: false,\r\nmessage: 'Enter a phone number.'\r\n}, {\r\nfield: 'phone',\r\nmethod: 'matches',\r\nargs: [/^\\(?\\d\\d\\d\\)? ?\\d\\d\\d-?\\d\\d\\d\\d$/],\r\nvalidWhen: true,\r\nmessage: 'Enter valid phone number.'\r\n}, {\r\nfield: 'password',\r\nmethod: 'isEmpty',\r\nvalidWhen: false,\r\nmessage: 'Enter password.'\r\n}, {\r\nfield: 'password_confirmation',\r\nmethod: 'isEmpty',\r\nvalidWhen: false,\r\nmessage: 'Enter Password confirmation.'\r\n}, {\r\nfield: 'password_confirmation',\r\nmethod: this.passwordMatch, // notice that we are passing a custom function here\r\nvalidWhen: true,\r\nmessage: 'Password and password confirmation do not match.'\r\n}]);\r\nthis.state = {\r\nfull_name: '',\r\nemail: '',\r\nphone: '',\r\npassword: '',\r\npassword_confirmation: '',\r\nvalidation: this.validator.valid(),\r\n}\r\nthis.submitted = false;\r\n}\r\npasswordMatch = (confirmation, state) => (state.password === confirmation)\r\nhandleInputChange = event => {\r\nevent.preventDefault();\r\nthis.setState({\r\n[event.target.name]: event.target.value,\r\n});\r\n}\r\nhandleFormSubmit = event => {\r\nevent.preventDefault();\r\nconst validation = this.validator.validate(this.state);\r\nthis.setState({\r\nvalidation\r\n});\r\nthis.submitted = true;\r\nif(validation.isValid) {\r\n//reaches here if form validates successfully...\r\n}\r\n}\r\nrender() {\r\nlet validation = this.submitted ?this.validator.validate(this.state) : this.state.validation\r\nreturn (\r\n<div className=\"container\">\r\n<div className=\"row\">\r\n<div className=\"col-md-4 col-md-offset-4\">\r\n<form className=\"registrationForm\">\r\n<h2>Registration form </h2>\r\n<div className={validation.email.isInvalid && 'has-error'}>\r\n<label htmlFor=\"full_name\">Full Name</label>\r\n<input type=\"string\" className=\"form-control\" name=\"full_name\" placeholder=\"Full Name\" onChange={this.handleInputChange} /> <span className=\"help-block\">{validation.full_name.message}</span> </div>\r\n<div className={validation.email.isInvalid && 'has-error'}>\r\n<label htmlFor=\"email\">Email address</label>\r\n<input type=\"email\" className=\"form-control\" name=\"email\" placeholder=\"Email address\" onChange={this.handleInputChange} /> <span className=\"help-block\">{validation.email.message}</span> </div>\r\n<div className={validation.phone.isInvalid && 'has-error'}>\r\n<label htmlFor=\"phone\">Phone(enter only 10 digit number)</label>\r\n<input type=\"phone\" className=\"form-control\" name=\"phone\" placeholder=\"Phone Number\" onChange={this.handleInputChange} /> <span className=\"help-block\">{validation.phone.message}</span> </div>\r\n<div className={validation.password.isInvalid && 'has-error'}>\r\n<label htmlFor=\"password\">Password</label>\r\n<input type=\"password\" className=\"form-control\" placeholder=\"Password\" name=\"password\" onChange={this.handleInputChange} /> <span className=\"help-block\">{validation.password.message}</span> </div>\r\n<div className={validation.password_confirmation.isInvalid && 'has-error'}>\r\n<label htmlFor=\"password_confirmation\">Confirm Password</label>\r\n<input type=\"password\" className=\"form-control\" placeholder=\"Confirm Password\" name=\"password_confirmation\" onChange={this.handleInputChange} /> <span className=\"help-block\">{validation.password_confirmation.message}</span> </div>\r\n<button onClick={this.handleFormSubmit} className=\"btn btn-primary\"> Register </button>\r\n</form>\r\n</div>\r\n</div>\r\n</div>\r\n)\r\n}\r\n}\r\n\r\nexport default Register;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*import React from 'react';\r\nimport { useState } from 'react';\r\n\r\n function Register() {\r\n\r\n// States for registration\r\nconst [name, setName] = useState('');\r\nconst [email, setEmail] = useState('');\r\nconst [password, setPassword] = useState('');\r\n\r\n// States for checking the errors\r\nconst [submitted, setSubmitted] = useState(false);\r\nconst [error, setError] = useState(false);\r\n\r\n// Handling the name change\r\nconst handleName = (e) => {\r\n\tsetName(e.target.value);\r\n\tsetSubmitted(false);\r\n};\r\n\r\n// Handling the email change\r\nconst handleEmail = (e) => {\r\n\tsetEmail(e.target.value);\r\n\tsetSubmitted(false);\r\n};\r\n\r\n// Handling the password change\r\nconst handlePassword = (e) => {\r\n\tsetPassword(e.target.value);\r\n\tsetSubmitted(false);\r\n};\r\n\r\n// Handling the form submission\r\nconst handleSubmit = (e) => {\r\n\te.preventDefault();\r\n\tif (name === '' || email === '' || password === '') {\r\n\tsetError(true);\r\n\t} else {\r\n\tsetSubmitted(true);\r\n\tsetError(false);\r\n\t}\r\n};\r\n\r\n// Showing success message\r\nconst successMessage = () => {\r\n\treturn (\r\n\t<div\r\n\t\tclassName=\"success\"\r\n\t\tstyle={{\r\n\t\tdisplay: submitted ? '' : 'none',\r\n\t\t}}>\r\n\t\t<h1>User {name} successfully registered!!</h1>\r\n\t</div>\r\n\t);\r\n};\r\n\r\n// Showing error message if error is true\r\nconst errorMessage = () => {\r\n\treturn (\r\n\t<div\r\n\t\tclassName=\"error\"\r\n\t\tstyle={{\r\n\t\tdisplay: error ? '' : 'none',\r\n\t\t}}>\r\n\t\t<h1>Please enter all the fields</h1>\r\n\t</div>\r\n\t);\r\n};\r\n\r\nreturn (\r\n\t<div className=\"form\">\r\n\t<div>\r\n\t\t<h1>User Registration</h1>\r\n\t</div>\r\n\r\n\t{/* Calling to the methods */}\r\n\t{/*<div className=\"messages\">\r\n\t\t{errorMessage()}\r\n\t\t{successMessage()}\r\n\t</div>\r\n\r\n\t<form>\r\n\t\t{/* Labels and inputs for form data */}\r\n\t\t{/*<label className=\"label\">Name</label>\r\n\t\t<input onChange={handleName} className=\"input\"\r\n\t\tvalue={name} type=\"text\" />\r\n\r\n\t\t<label className=\"label\">Email</label>\r\n\t\t<input onChange={handleEmail} className=\"input\"\r\n\t\tvalue={email} type=\"email\" />\r\n\r\n\t\t<label className=\"label\">Password</label>\r\n\t\t<input onChange={handlePassword} className=\"input\"\r\n\t\tvalue={password} type=\"password\" />\r\n\r\n\t\t<button onClick={handleSubmit} className=\"btn\" type=\"submit\">\r\n\t\tSubmit\r\n\t\t</button>\r\n\t</form>\r\n\t</div>\r\n);\r\n}*/}\r\n"]},"metadata":{},"sourceType":"module"}