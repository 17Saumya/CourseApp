{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["import React from 'react';\nimport { Form, Button, InputGroup } from \"react-bootstrap\";\nimport Select from 'react-select';\nimport AsyncSelect from 'react-select/async';\nimport axios from \"axios\"\n\nclass FormBuilder extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            fields: props.fields,\n        };\n    }\n    componentDidMount() {\n        this.initActions();\n    }\n    change(e) {\n        this.state.fields.fields[e.target.name]['value'] = e.target.value;\n        this.props.onChange(this.state.fields);\n    }\n    submit(e) {\n        e.preventDefault();\n        this.validate();\n    }\n    validate() {\n        var hasAnyErr = false;\n        Object.entries(this.state.fields.fields).map(([key, value]) => {\n            if (value.errors != null) {\n                var errors = value.errors;\n            } else {\n                var errors = [];\n            }\n            if (value.min != null) {\n                var minMessage = \"Field must have minimum \" + value.min + \" characters\";\n                if (value.value != null) {\n                    if (value.value.length != 0) {\n                        if (value.value.length < value.min) {\n                            hasAnyErr = true;\n                            if (errors.indexOf() == -1) {\n                                errors.push(minMessage);\n                            }\n                        } else {\n                            if (errors.indexOf(minMessage) > -1) {\n                                errors.splice(errors.indexOf(minMessage), 1);\n                            }\n                        }\n                    } else {\n                        if (errors.indexOf(minMessage) > -1) {\n                            errors.splice(errors.indexOf(minMessage), 1);\n                        }\n                    }\n                }\n            }\n            if (value.max != null) {\n                var maxMessage = \"Field must have maximum \" + value.max + \" characters only\";\n                if (value.value != null) {\n                    if (value.value.length > value.max) {\n                        hasAnyErr = true;\n                        if (errors.indexOf() == -1) {\n                            errors.push(maxMessage);\n                        }\n                    } else {\n                        if (errors.indexOf(maxMessage) > -1) {\n                            errors.splice(errors.indexOf(maxMessage), 1);\n                        }\n                    }\n                }\n            }\n            if (value.required == true) {\n                if (value.requireMessage) {\n                    var requiredMessage = value.requireMessage;\n                } else {\n                    var requiredMessage = \"Mindatory Field\";\n                }\n                if (value.value == null || value.value == \"\") {\n                    hasAnyErr = true;\n                    if (errors.indexOf(requiredMessage) == -1) {\n                        errors.push(requiredMessage);\n                    }\n                } else {\n                    if (errors != null) {\n                        var erindex = errors.indexOf(requiredMessage);\n                        if (erindex > -1) {\n                            errors.splice(erindex, 1);\n                        }\n                    }\n                }\n            }\n            if (errors) {\n                if (errors.length != 0) {\n                    hasAnyErr = true;\n                }\n            }\n            this.state.fields.fields[key]['errors'] = errors;\n        });\n        this.props.onChange(this.state.fields);\n        if (hasAnyErr == false) {\n            this.props.onSubmit(this.state.fields);\n        }\n    }\n    componentDidUpdate(previousProps) {\n        if (this.props.fields != this.state.fields) {\n            this.setState({\n                fields: this.props.fields\n            });\n        }\n    }\n    selectChange(name) {\n        return function (val) {\n            this.state.fields.fields[name]['value'] = val;\n            this.props.onChange(this.state.fields);\n        }.bind(this);\n    }\n    radioChange(e) {\n        var name = e.target.name;\n        var fieldData = this.state.fields;\n        fieldData.fields[name][\"value\"] = e.target.value;\n        this.setState({\n            fields: fieldData,\n        });\n        this.props.onChange(this.state.fields);\n    }\n    checkBoxChange(e) {\n        var name = e.target.name;\n        var fieldData = this.state.fields;\n        var array = new Array();\n        array = array || [];\n        if (fieldData.fields[name]['value'] != null) {\n            array = fieldData.fields[name][\"value\"];\n            array = array || [];\n        }\n        if (e.target.checked) {\n            array.push(e.target.value);\n        } else {\n            array.splice(array.indexOf(e.target.value), 1);\n        }\n        fieldData.fields[name][\"value\"] = array;\n        this.setState({\n            fields: fieldData,\n        });\n        this.props.onChange(this.state.fields);\n    }\n    fieldError(errors) {\n        var er = \"\";\n        if (errors != null) {\n            er = Object.entries(errors).map(([key, err]) => {\n                return (<Form.Text className=\"text-danger\">{err}</Form.Text>)\n            });\n        }\n        return er;\n    }\n    submitCallBack() {\n        this.validate();\n    }\n    initActions() {\n        // console.log(this.state.fields);\n        this.state.fields.submit = this.submitCallBack.bind(this);\n        this.state.fields.getFormData = this.getFormData.bind(this);\n        if (this.props.getActions) {\n            this.props.getActions(this.state.fields);\n        }\n    }\n    requiredFieldStar(field) {\n        if (field.required) {\n            return (<span className=\"text-danger\">*</span>);\n        }\n        // return (<></>);\n    }\n    getFields() {\n        const res = Object.entries(this.state.fields.fields).map(([key, value]) => {\n            this.state.fields.fields[key][\"actions\"] = React.createRef();\n            if (value.type == \"textarea\") {\n                return (\n                    <div key={\"field-\" + key}>\n                        <Form.Group>\n                            <Form.Label>{value.label} {this.requiredFieldStar(value)}</Form.Label>\n                            <textarea\n                                onChange={this.change.bind(this)}\n                                ref={this.state.fields.fields[key][\"actions\"]}\n                                className=\"form-control\"\n                                type={value.type}\n                                name={key}\n                                readOnly={value.readOnly == true ? true : false}\n                                value={value.value != null ? value.value : \"\"}\n                                placeholder={value.placeholder != null && value.placeholder}\n                            ></textarea>\n                            {this.fieldError(value.errors)}\n                        </Form.Group>\n                    </div>\n                );\n            } else if (value.type == \"select\") {\n                return (\n                    <div key={\"field-\" + key}>\n                        <Form.Group>\n                            <Form.Label>{value.label} {this.requiredFieldStar(value)}</Form.Label>\n                            {this.state.fields.fields[key]['url'] ? <AsyncSelect\n                                name={key}\n                                ref={this.state.fields.fields[key][\"actions\"]}\n                                placeholder={value.placeholder != null && value.placeholder}\n                                isMulti={value.multiple != null ? value.multiple : false}\n                                autoFocus={value.autofocus != null ? value.autofocus : false}\n                                // options={value.options}\n                                value={value.value != null ? value.value : \"\"}\n                                onChange={this.selectChange(key)}\n                                className=\"form-builder-select\"\n                                cacheOptions\n                                defaultOptions\n                                loadOptions={async (inputValue) => {\n                                var minSearchLen = this.state.fields.fields[key][\"minSearchLen\"] != null ? this.state.fields.fields[key][\"minSearchLen\"] : 2;\n                                    if (inputValue.length >= minSearchLen) {\n                                        var req = await axios.get(`${this.state.fields.fields[key][\"url\"]}?query=${inputValue}`);\n                                        return req.data.data;\n                                    }\n                                }}\n                            /> : <Select\n                                name={key}\n                                ref={this.state.fields.fields[key][\"actions\"]}\n                                placeholder={value.placeholder != null && value.placeholder}\n                                isMulti={value.multiple != null ? value.multiple : false}\n                                autoFocus={value.autofocus != null ? value.autofocus : false}\n                                options={value.options}\n                                value={value.value != null ? value.value : \"\"}\n                                onChange={this.selectChange(key)}\n                                className=\"form-builder-select\"\n                            />\n\n                            }\n                            {this.fieldError(value.errors)}\n\n                        </Form.Group>\n                    </div>\n                );\n            } else if (value.type == \"file\") {\n                return (\n                    <div key={\"field-\" + key}>\n\n                        <Form.Group>\n                            <Form.File\n                                ref={this.state.fields.fields[key][\"actions\"]}\n                                label={value.name}\n                                name={value.key}\n                            />\n                            {this.fieldError(value.errors)}\n                        </Form.Group>\n                    </div>\n                );\n            } else if (value.type == \"submit\") {\n                return (<Button type=\"submit\" className={value.color}>{value.label}</Button>);\n            } else if (value.type == \"checkbox\") {\n                return (\n                    <div key={\"field-\" + key}>\n                        <Form.Group ref={this.state.fields.fields[key][\"actions\"]} >\n                            <Form.Label>{value.label} {this.requiredFieldStar(value)}</Form.Label>\n                            {\n                                Object.entries(value.options).map(([k, v]) => {\n                                    var ischecked = false;\n                                    if (value.value != null) {\n                                        var array = value.value;\n                                        array = array || [];\n                                        if (array.includes(v.value)) {\n                                            ischecked = true;\n                                        }\n                                    }\n                                    return (<Form.Check type=\"checkbox\" checked={ischecked} name={key} onChange={this.checkBoxChange.bind(this)} label={v.label} value={v.value} />);\n                                })\n                            }\n                            {this.fieldError(value.errors)}\n                        </Form.Group>\n                    </div>\n                );\n            } else if (value.type == \"radio\") {\n                return (\n                    <div key={\"field-\" + key}>\n                        <Form.Group ref={this.state.fields.fields[key][\"actions\"]} >\n                            <Form.Label>{value.label} {this.requiredFieldStar(value)}</Form.Label>\n                            {\n                                Object.entries(value.options).map(([k, v]) => {\n                                    var checked = false;\n                                    if (value != null) {\n                                        if (value.value == v.value) {\n                                            checked = true;\n                                        }\n                                    }\n                                    return (<Form.Check type=\"radio\" name={key} checked={checked} onChange={this.radioChange.bind(this)} label={v.label} value={v.value} />);\n                                })\n                            }\n                            {this.fieldError(value.errors)}\n                        </Form.Group>\n                    </div>\n                );\n            } else if (value.type == \"number\") {\n                return (\n                    <div key={\"field-\" + key}>\n                        <Form.Group>\n                            <Form.Label>{value.label} {this.requiredFieldStar(value)}</Form.Label>\n                            <InputGroup>\n                                {value.prefix && <InputGroup.Text id=\"basic-addon1\">{value.prefix}</InputGroup.Text>}\n                                <Form.Control\n                                    ref={this.state.fields.fields[key][\"actions\"]}\n                                    onChange={this.change.bind(this)}\n                                    readOnly={value.readOnly == true ? true : false}\n                                    type={value.type}\n                                    name={key}\n                                    value={value.value != null ? value.value : \"\"}\n                                    placeholder={value.placeholder != null && value.placeholder}\n                                />\n                                {value.suffix && <InputGroup.Text id=\"basic-addon1\">{value.suffix}</InputGroup.Text>}\n                            </InputGroup>\n                            {this.fieldError(value.errors)}\n                        </Form.Group>\n                    </div>\n                );\n            } else {\n                return (\n                    <div key={\"field-\" + key}>\n                        <Form.Group>\n                            <Form.Label>{value.label} {this.requiredFieldStar(value)}</Form.Label>\n                            <InputGroup>\n                                {value.prefix && <InputGroup.Text id=\"basic-addon1\">{value.prefix}</InputGroup.Text>}\n                                <Form.Control\n                                    ref={this.state.fields.fields[key][\"actions\"]}\n                                    onChange={this.change.bind(this)}\n                                    readOnly={value.readOnly == true ? true : false}\n                                    type={value.type}\n                                    name={key}\n                                    value={value.value != null ? value.value : \"\"}\n                                    placeholder={value.placeholder != null && value.placeholder}\n                                />\n                                {value.suffix && <InputGroup.Text id=\"basic-addon1\">{value.suffix}</InputGroup.Text>}\n                            </InputGroup>\n                            {this.fieldError(value.errors)}\n                        </Form.Group>\n                    </div>\n                );\n            }\n        });\n        return res;\n    }\n    getFormData() {\n        var formData = new FormData();\n        Object.entries(this.state.fields.fields).map(([k, v]) => {\n            if (v.required == true) {\n                if (v.type == \"select\" || v.type == \"checkbox\" || v.type == \"radio\") {\n                    formData.append(k, v.value.value);\n                } else {\n                    formData.append(k, v.value);\n                }\n            } else {\n                if (v.value) {\n                    if (v.type == \"select\" || v.type == \"checkbox\" || v.type == \"radio\") {\n                        formData.append(k, v.value.value);\n                    } else {\n                        formData.append(k, v.value);\n                    }\n                }\n            }\n        });\n        return formData;\n    }\n    render() {\n        const res = this.getFields();\n        return (\n            <Form onSubmit={this.submit.bind(this)}>\n                {res}\n            </Form>\n        );\n    }\n\n}\n\nexport default FormBuilder;"],"names":["FormBuilder","props","state","fields","componentDidMount","initActions","change","e","target","name","value","onChange","submit","preventDefault","validate","hasAnyErr","Object","entries","map","key","errors","min","minMessage","length","indexOf","push","splice","max","maxMessage","required","requireMessage","requiredMessage","erindex","onSubmit","componentDidUpdate","previousProps","setState","selectChange","val","bind","radioChange","fieldData","checkBoxChange","array","Array","checked","fieldError","er","err","Form","submitCallBack","getFormData","getActions","requiredFieldStar","field","getFields","res","React","createRef","type","label","readOnly","placeholder","multiple","autofocus","inputValue","minSearchLen","axios","get","req","data","options","Button","color","v","ischecked","includes","InputGroup","prefix","suffix","formData","FormData","k","append","render","Component"],"mappings":"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"}